plugins {
    id 'java'
}

group = 'me.erez'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url 'https://repo.essentialsx.net/releases'
    }
    maven {
        url 'https://maven.enginehub.org/repo/'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        name "essentialsx-releases"
        url "https://repo.essentialsx.net/releases/"
    }
    maven {
        name "papermc"
        url "https://papermc.io/repo/repository/maven-public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        url "https://maven.enginehub.org/repo/"
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'net.essentialsx:EssentialsX:2.19.7'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly 'com.sk89q.worldedit:worldedit-core:7.2.13'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.2.13'
    compileOnly 'me.clip:placeholderapi:2.11.3'
    compileOnly 'com.github.ElgarL:GroupManager:2.9'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.5'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
